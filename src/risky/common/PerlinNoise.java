package risky.common;

import java.util.Random;

/**
 * Perlin Noise implemented using psuedocode from http://freespace.virgin.net/hugo.elias/models/m_perlin.htm
 * Used to generate maps for the game
 * TODO(add proper risk map generation)
 * TODO(comment all functions)
 * @author David Karwowski
 *
 */
public class PerlinNoise {
    private int gridWidth;
    private int gridHeight;
    private int squaresPerSide;
    
    private int prime1;
    private int prime2;
    private int prime3;
    private int prime4;
    private int prime5;
    private int prime6;
    
    private double persistance;
    private int octaves;
    
    private final int[] randPrime1 = {31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97};
    
    private final int[] randPrime2 = {1, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43};
    
    private final int[] randPrime3 = {13001, 13003, 13007, 13009, 13033, 13037, 13043, 13049, 13063, 13093, 13099, 13103, 13109, 13121, 13127, 
            13147, 13151, 13159, 13163, 13171, 13177, 13183, 13187, 13217, 13219, 13229, 13241, 13249, 13259, 13267, 
            13291, 13297, 13309, 13313, 13327, 13331, 13337, 13339, 13367, 13381, 13397, 13399, 13411, 13417, 13421, 
            13441, 13451, 13457, 13463, 13469, 13477, 13487, 13499, 13513, 13523, 13537, 13553, 13567, 13577, 13591, 
            13597, 13613, 13619, 13627, 13633, 13649, 13669, 13679, 13681, 13687, 13691, 13693, 13697, 13709, 13711, 
            13721, 13723, 13729, 13751, 13757, 13759, 13763, 13781, 13789, 13799, 13807, 13829, 13831, 13841, 13859, 
            13873, 13877, 13879, 13883, 13901, 13903, 13907, 13913, 13921, 13931, 13933, 13963, 13967, 13997, 13999, 
            14009, 14011, 14029, 14033, 14051, 14057, 14071, 14081, 14083, 14087, 14107, 14143, 14149, 14153, 14159, 
            14173, 14177, 14197, 14207, 14221, 14243, 14249, 14251, 14281, 14293, 14303, 14321, 14323, 14327, 14341, 
            14347, 14369, 14387, 14389, 14401, 14407, 14411, 14419, 14423, 14431, 14437, 14447, 14449, 14461, 14479, 
            14489, 14503, 14519, 14533, 14537, 14543, 14549, 14551, 14557, 14561, 14563, 14591, 14593, 14621, 14627, 
            14629, 14633, 14639, 14653, 14657, 14669, 14683, 14699, 14713, 14717, 14723, 14731, 14737, 14741, 14747, 
            14753, 14759, 14767, 14771, 14779, 14783, 14797, 14813, 14821, 14827, 14831, 14843, 14851, 14867, 14869, 
            14879, 14887, 14891, 14897, 14923, 14929, 14939, 14947, 14951, 14957, 14969, 14983, 15013, 15017, 15031, 
            15053, 15061, 15073, 15077, 15083, 15091, 15101, 15107, 15121, 15131, 15137, 15139, 15149, 15161, 15173, 
            15187, 15193, 15199, 15217, 15227, 15233, 15241, 15259, 15263, 15269, 15271, 15277, 15287, 15289, 15299, 
            15307, 15313, 15319, 15329, 15331, 15349, 15359, 15361, 15373, 15377, 15383, 15391, 15401, 15413, 15427, 
            15439, 15443, 15451, 15461, 15467, 15473, 15493, 15497, 15511, 15527, 15541, 15551, 15559, 15569, 15581, 
            15583, 15601, 15607, 15619, 15629, 15641, 15643, 15647, 15649, 15661, 15667, 15671, 15679, 15683, 15727, 
            15731, 15733, 15737, 15739, 15749, 15761, 15767, 15773, 15787, 15791, 15797, 15803, 15809, 15817, 15823, 
            15859, 15877, 15881, 15887, 15889, 15901, 15907, 15913, 15919, 15923, 15937, 15959, 15971, 15973, 15991, 
            16001, 16007, 16033, 16057, 16061, 16063, 16067, 16069, 16073, 16087, 16091, 16097, 16103, 16111, 16127, 
            16139, 16141, 16183, 16187, 16189, 16193, 16217, 16223, 16229, 16231, 16249, 16253, 16267, 16273, 16301, 
            16319, 16333, 16339, 16349, 16361, 16363, 16369, 16381, 16411, 16417, 16421, 16427, 16433, 16447, 16451, 
            16453, 16477, 16481, 16487, 16493, 16519, 16529, 16547, 16553, 16561, 16567, 16573, 16603, 16607, 16619, 
            16631, 16633, 16649, 16651, 16657, 16661, 16673, 16691, 16693, 16699, 16703, 16729, 16741, 16747, 16759, 
            16763, 16787, 16811, 16823, 16829, 16831, 16843, 16871, 16879, 16883, 16889, 16901, 16903, 16921, 16927, 
            16931, 16937, 16943, 16963, 16979, 16981, 16987, 16993};
    
    private final int[] randPrime4 = {785003, 785017, 785033, 785053, 785093, 785101, 785107, 785119, 785123, 785129, 785143, 785153, 785159, 785167, 785203, 
            785207, 785219, 785221, 785227, 785249, 785269, 785287, 785293, 785299, 785303, 785311, 785321, 785329, 785333, 785341, 
            785347, 785353, 785357, 785363, 785377, 785413, 785423, 785431, 785459, 785461, 785483, 785501, 785503, 785527, 785537, 
            785549, 785569, 785573, 785579, 785591, 785597, 785623, 785627, 785641, 785651, 785671, 785693, 785717, 785731, 785737, 
            785753, 785773, 785777, 785779, 785801, 785803, 785809, 785839, 785857, 785861, 785879, 785903, 785921, 785923, 785947, 
            785951, 785963, 786001, 786013, 786017, 786031, 786047, 786053, 786059, 786061, 786077, 786109, 786127, 786151, 786167, 
            786173, 786179, 786197, 786211, 786223, 786241, 786251, 786271, 786307, 786311, 786319, 786329, 786337, 786349, 786371, 
            786407, 786419, 786431, 786433, 786449, 786469, 786491, 786547, 786551, 786553, 786587, 786589, 786613, 786629, 786659, 
            786661, 786673, 786691, 786697, 786701, 786703, 786707, 786719, 786739, 786763, 786803, 786823, 786829, 786833, 786859, 
            786881, 786887, 786889, 786901, 786931, 786937, 786941, 786949, 786959, 786971, 786979, 786983, 787021, 787043, 787051, 
            787057, 787067, 787069, 787079, 787091, 787099, 787123, 787139, 787153, 787181, 787187, 787207, 787217, 787243, 787261, 
            787277, 787289, 787309, 787331, 787333, 787337, 787357, 787361, 787427, 787429, 787433, 787439, 787447, 787469, 787477, 
            787483, 787489, 787513, 787517, 787519, 787529, 787537, 787541, 787547, 787573, 787601, 787609, 787621, 787639, 787649, 
            787667, 787697, 787711, 787747, 787751, 787757, 787769, 787771, 787777, 787783, 787793, 787807, 787811, 787817, 787823, 
            787837, 787879, 787883, 787903, 787907, 787939, 787973, 787981, 787993, 787999, 788009, 788023, 788027, 788033, 788041, 
            788071, 788077, 788087, 788089, 788093, 788107, 788129, 788153, 788159, 788167, 788173, 788189, 788209, 788213, 788231, 
            788261, 788267, 788287, 788309, 788317, 788321, 788351, 788353, 788357, 788363, 788369, 788377, 788383, 788387, 788393, 
            788399, 788413, 788419, 788429, 788449, 788467, 788479, 788497, 788521, 788527, 788531, 788537, 788549, 788561, 788563, 
            788569, 788603, 788621, 788651, 788659, 788677, 788687, 788701, 788719, 788761, 788779, 788789, 788813, 788819, 788849, 
            788863, 788867, 788869, 788873, 788891, 788897, 788903, 788927, 788933, 788941, 788947, 788959, 788971, 788993, 788999, 
            789001, 789017, 789029, 789031, 789067, 789077, 789091, 789097, 789101, 789109, 789121, 789133, 789137, 789149, 789169, 
            789181, 789221, 789227, 789251, 789311, 789323, 789331, 789343, 789367, 789377, 789389, 789391, 789407, 789419, 789443, 
            789473, 789491, 789493, 789511, 789527, 789533, 789557, 789571, 789577, 789587, 789589, 789611, 789623, 789631, 789653, 
            789671, 789673, 789683, 789689, 789709, 789713, 789721, 789731, 789739, 789749, 789793, 789823, 789829, 789847, 789851, 
            789857, 789883, 789941, 789959, 789961, 789967, 789977, 789979, 790003, 790021, 790033, 790043, 790051, 790057, 790063, 
            790087, 790093, 790099, 790121, 790169, 790171, 790189, 790199, 790201, 790219, 790241, 790261, 790271, 790277, 790289, 
            790291, 790327, 790331, 790333, 790351, 790369, 790379, 790397, 790403, 790417, 790421, 790429, 790451, 790459, 790481, 
            790501, 790513, 790519, 790523, 790529, 790547, 790567, 790583, 790589, 790607, 790613, 790633, 790637, 790649, 790651, 
            790693, 790697, 790703, 790709, 790733, 790739, 790747, 790753, 790781, 790793, 790817, 790819, 790831, 790843, 790861, 
            790871, 790879, 790883, 790897, 790927, 790957, 790961, 790967, 790969, 790991, 790997, 791003, 791009, 791017, 791029, 
            791047, 791053, 791081, 791093, 791099, 791111, 791117, 791137, 791159, 791191, 791201, 791209, 791227, 791233, 791251, 
            791257, 791261, 791291, 791309, 791311, 791317, 791321, 791347, 791363, 791377, 791387, 791411, 791419, 791431, 791443, 
            791447, 791473, 791489, 791519, 791543, 791561, 791563, 791569, 791573, 791599, 791627, 791629, 791657, 791663, 791677, 
            791699, 791773, 791783, 791789, 791797, 791801, 791803, 791827, 791849, 791851, 791887, 791891, 791897, 791899, 791909, 
            791927, 791929, 791933, 791951, 791969, 791971, 791993, 792023, 792031, 792037, 792041, 792049, 792061, 792067, 792073, 
            792101, 792107, 792109, 792119, 792131, 792151, 792163, 792179, 792223, 792227, 792229, 792241, 792247, 792257, 792263, 
            792277, 792283, 792293, 792299, 792301, 792307, 792317, 792359, 792371, 792377, 792383, 792397, 792413, 792443, 792461, 
            792479, 792481, 792487, 792521, 792529, 792551, 792553, 792559, 792563, 792581, 792593, 792601, 792613, 792629, 792637, 
            792641, 792643, 792647, 792667, 792679, 792689, 792691, 792697, 792703, 792709, 792713, 792731, 792751, 792769, 792793, 
            792797, 792821, 792871, 792881, 792893, 792907, 792919, 792929, 792941, 792959, 792973, 792983, 792989, 792991, 793043, 
            793069, 793099, 793103, 793123, 793129, 793139, 793159, 793181, 793187, 793189, 793207, 793229, 793253, 793279, 793297, 
            793301, 793327, 793333, 793337, 793343, 793379, 793399, 793439, 793447, 793453, 793487, 793489, 793493, 793511, 793517, 
            793519, 793537, 793547, 793553, 793561, 793591, 793601, 793607, 793621, 793627, 793633, 793669, 793673, 793691, 793699, 
            793711, 793717, 793721, 793733, 793739, 793757, 793769, 793777, 793787, 793789, 793813, 793841, 793843, 793853, 793867, 
            793889, 793901, 793927, 793931, 793939, 793957, 793967, 793979, 793981, 793999, 794009, 794011, 794023, 794033, 794039, 
            794041, 794063, 794071, 794077, 794089, 794111, 794113, 794119, 794137, 794141, 794149, 794153, 794161, 794173, 794179, 
            794191, 794201, 794203, 794207, 794221, 794231, 794239, 794249, 794327, 794341, 794363, 794383, 794389, 794399, 794407, 
            794413, 794449, 794471, 794473, 794477, 794483, 794491, 794509, 794531, 794537, 794543, 794551, 794557, 794569, 794579, 
            794587, 794593, 794641, 794653, 794657, 794659, 794669, 794693, 794711, 794741, 794743, 794749, 794779, 794831, 794879, 
            794881, 794887, 794921, 794923, 794953, 794957, 794993, 794999};
    
    private final int[] randPrime5 = {1376310031, 1376310097, 1376310107, 1376310119, 1376310197, 1376310227, 1376310241, 1376310251, 1376310337, 1376310343, 1376310347, 1376310367, 1376310371, 1376310389, 1376310407, 
            1376310431, 1376310437, 1376310451, 1376310457, 1376310473, 1376310491, 1376310511, 1376310521, 1376310527, 1376310539, 1376310553, 1376310563, 1376310577, 1376310601, 1376310613, 
            1376310653, 1376310671, 1376310709, 1376310721, 1376310737, 1376310757, 1376310763, 1376310799, 1376310821, 1376310841, 1376310893, 1376310899, 1376310911, 1376310953, 1376310977, 
            1376310979, 1376310983, 1376311009, 1376311031, 1376311039, 1376311043, 1376311051, 1376311067, 1376311081, 1376311091, 1376311117, 1376311129, 1376311133, 1376311207, 1376311213, 
            1376311241, 1376311243, 1376311249, 1376311259, 1376311273, 1376311291, 1376311301, 1376311327, 1376311333, 1376311373, 1376311403, 1376311423, 1376311427, 1376311451, 1376311457, 
            1376311487, 1376311523, 1376311553, 1376311613, 1376311631, 1376311639, 1376311679, 1376311723, 1376311733, 1376311751, 1376311771, 1376311777, 1376311787, 1376311801, 1376311831, 
            1376311837, 1376311921, 1376311943, 1376311961, 1376311967, 1376312017, 1376312071, 1376312087, 1376312099, 1376312107, 1376312173, 1376312183, 1376312257, 1376312261, 1376312263, 
            1376312269, 1376312279, 1376312323, 1376312369, 1376312383, 1376312393, 1376312419, 1376312447, 1376312461, 1376312467, 1376312489, 1376312491, 1376312501, 1376312507, 1376312513, 
            1376312527, 1376312543, 1376312551, 1376312579, 1376312627, 1376312629, 1376312657, 1376312687, 1376312689, 1376312753, 1376312783, 1376312789, 1376312813, 1376312857, 1376312879, 
            1376312881, 1376312897, 1376312909, 1376312929, 1376312953, 1376312989, 1376313007, 1376313011, 1376313017, 1376313053, 1376313067, 1376313101, 1376313131, 1376313137, 1376313143, 
            1376313151, 1376313167, 1376313179, 1376313199, 1376313209, 1376313223, 1376313229, 1376313277, 1376313313, 1376313343, 1376313347, 1376313377, 1376313409, 1376313481, 1376313493, 
            1376313517, 1376313563, 1376313577, 1376313611, 1376313613, 1376313619, 1376313623, 1376313647, 1376313649, 1376313691, 1376313703, 1376313713, 1376313733, 1376313751, 1376313779, 
            1376313787, 1376313793, 1376313823, 1376313839, 1376313907, 1376313941, 1376313959, 1376313977, 1376314007, 1376314013, 1376314087, 1376314139, 1376314141, 1376314189, 1376314211, 
            1376314231, 1376314249, 1376314253, 1376314259, 1376314297, 1376314307, 1376314327, 1376314337, 1376314361, 1376314483, 1376314487, 1376314501, 1376314561, 1376314579, 1376314613, 
            1376314619, 1376314627, 1376314633, 1376314637, 1376314649, 1376314663, 1376314673, 1376314703, 1376314729, 1376314739, 1376314763, 1376314777, 1376314783, 1376314811, 1376314873, 
            1376314903, 1376314949, 1376314991, 1376314993, 1376315041, 1376315071, 1376315081, 1376315093, 1376315099, 1376315107, 1376315111, 1376315119, 1376315197, 1376315201, 1376315207, 
            1376315221, 1376315267, 1376315279, 1376315299, 1376315309, 1376315357, 1376315387, 1376315411, 1376315417, 1376315431, 1376315449, 1376315459, 1376315467, 1376315477, 1376315503, 
            1376315509, 1376315519, 1376315527, 1376315531, 1376315581, 1376315657, 1376315683, 1376315747, 1376315753, 1376315761, 1376315777, 1376315797, 1376315827, 1376315861, 1376315879, 
            1376315887, 1376315893, 1376315909, 1376315917, 1376315947, 1376315953, 1376315989, 1376316041, 1376316197, 1376316223, 1376316239, 1376316241, 1376316247, 1376316257, 1376316301, 
            1376316317, 1376316341, 1376316367, 1376316371, 1376316391, 1376316397, 1376316407, 1376316419, 1376316457, 1376316467, 1376316533, 1376316553, 1376316563, 1376316569, 1376316581, 
            1376316593, 1376316629, 1376316637, 1376316649, 1376316671, 1376316673, 1376316677, 1376316679, 1376316691, 1376316727, 1376316751, 1376316761, 1376316763, 1376316769, 1376316779, 
            1376316791, 1376316841, 1376316853, 1376316899, 1376316901, 1376316911, 1376316917, 1376316943, 1376316989, 1376317051, 1376317087, 1376317123, 1376317153, 1376317183, 1376317219, 
            1376317289, 1376317333, 1376317339, 1376317361, 1376317387, 1376317391, 1376317427, 1376317477, 1376317483, 1376317511, 1376317517, 1376317519, 1376317549, 1376317559, 1376317609, 
            1376317667, 1376317693, 1376317711, 1376317717, 1376317729, 1376317751, 1376317753, 1376317759, 1376317793, 1376317799, 1376317843, 1376317871, 1376317879, 1376317913, 1376317919, 
            1376317927, 1376317937, 1376317973, 1376318017, 1376318023, 1376318063, 1376318101, 1376318117, 1376318123, 1376318131, 1376318189, 1376318197, 1376318227, 1376318231, 1376318233, 
            1376318261, 1376318263, 1376318287, 1376318323, 1376318387, 1376318393, 1376318401, 1376318483, 1376318491, 1376318497, 1376318527, 1376318549, 1376318557, 1376318579, 1376318621, 
            1376318639, 1376318641, 1376318683, 1376318707, 1376318717, 1376318729, 1376318731, 1376318737, 1376318747, 1376318753, 1376318767, 1376318777, 1376318807, 1376318809, 1376318821, 
            1376318831, 1376318837, 1376318897, 1376318921, 1376318953, 1376318959, 1376318981, 1376318989, 1376319041, 1376319047, 1376319053, 1376319079, 1376319089, 1376319101, 1376319107, 
            1376319187, 1376319221, 1376319253, 1376319257, 1376319331, 1376319341, 1376319349, 1376319403, 1376319409, 1376319419, 1376319433, 1376319437, 1376319467, 1376319479, 1376319499, 
            1376319509, 1376319559, 1376319569, 1376319577, 1376319631, 1376319641, 1376319647, 1376319661, 1376319713, 1376319719, 1376319757, 1376319761, 1376319767, 1376319781, 1376319799, 
            1376319811, 1376319823, 1376319827, 1376319899, 1376319907, 1376319913};
    
    private final int[] randPrime6 = {1073740013, 1073740049, 1073740061, 1073740067, 1073740079, 1073740123, 1073740127, 1073740133, 1073740139, 1073740147, 1073740163, 1073740177, 1073740183, 1073740189, 1073740201, 
            1073740249, 1073740379, 1073740391, 1073740403, 1073740439, 1073740463, 1073740477, 1073740489, 1073740501, 1073740517, 1073740523, 1073740529, 1073740537, 1073740541, 1073740543, 
            1073740567, 1073740571, 1073740609, 1073740649, 1073740691, 1073740693, 1073740697, 1073740781, 1073740783, 1073740793, 1073740807, 1073740819, 1073740847, 1073740853, 1073740879, 
            1073740909, 1073740933, 1073740951, 1073740963, 1073741047, 1073741077, 1073741101, 1073741173, 1073741189, 1073741197, 1073741213, 1073741237, 1073741287, 1073741309, 1073741311, 
            1073741329, 1073741371, 1073741381, 1073741387, 1073741399, 1073741419, 1073741441, 1073741467, 1073741477, 1073741503, 1073741527, 1073741561, 1073741567, 1073741621, 1073741651, 
            1073741663, 1073741671, 1073741689, 1073741717, 1073741719, 1073741723, 1073741741, 1073741783, 1073741789, 1073741827, 1073741831, 1073741833, 1073741839, 1073741843, 1073741857, 
            1073741891, 1073741909, 1073741939, 1073741953, 1073741969, 1073741971, 1073741987, 1073741993, 1073742037, 1073742053, 1073742073, 1073742077, 1073742091, 1073742113, 1073742169, 
            1073742203, 1073742209, 1073742223, 1073742233, 1073742259, 1073742277, 1073742289, 1073742343, 1073742353, 1073742361, 1073742391, 1073742403, 1073742463, 1073742493, 1073742517, 
            1073742583, 1073742623, 1073742653, 1073742667, 1073742671, 1073742673, 1073742707, 1073742713, 1073742721, 1073742731, 1073742767, 1073742773, 1073742811, 1073742851, 1073742853, 
            1073742881, 1073742889, 1073742913, 1073742931, 1073742937, 1073742959, 1073742983, 1073743007, 1073743037, 1073743049, 1073743051, 1073743079, 1073743091, 1073743093, 1073743123, 
            1073743129, 1073743141, 1073743159, 1073743163, 1073743189, 1073743199, 1073743207, 1073743243, 1073743291, 1073743303, 1073743313, 1073743327, 1073743331, 1073743337, 1073743381, 
            1073743387, 1073743393, 1073743397, 1073743403, 1073743417, 1073743421, 1073743427, 1073743457, 1073743459, 1073743469, 1073743501, 1073743507, 1073743513, 1073743543, 1073743577, 
            1073743591, 1073743633, 1073743739, 1073743757, 1073743831, 1073743861, 1073743871, 1073743883, 1073743889, 1073743901, 1073743921, 1073743973, 1073743981, 1073743991, 1073744059, 
            1073744069, 1073744071, 1073744137, 1073744159, 1073744171, 1073744197, 1073744249, 1073744257, 1073744261, 1073744263, 1073744291, 1073744297, 1073744311, 1073744317, 1073744339, 
            1073744377, 1073744389, 1073744417, 1073744447, 1073744461, 1073744491, 1073744533, 1073744557, 1073744569, 1073744593, 1073744597, 1073744603, 1073744621, 1073744677, 1073744681, 
            1073744687, 1073744779, 1073744813, 1073744827, 1073744849, 1073744863, 1073744909, 1073744911, 1073744927, 1073744933, 1073744977, 1073744993, 1073745017, 1073745031, 1073745061, 
            1073745067, 1073745083, 1073745121, 1073745161, 1073745193, 1073745209, 1073745251, 1073745259, 1073745287, 1073745293, 1073745301, 1073745319, 1073745331, 1073745359, 1073745367, 
            1073745377, 1073745397, 1073745457, 1073745469, 1073745473, 1073745487, 1073745521, 1073745529, 1073745557, 1073745577, 1073745581, 1073745599, 1073745623, 1073745637, 1073745649, 
            1073745697, 1073745737, 1073745763, 1073745767, 1073745769, 1073745773, 1073745781, 1073745787, 1073745797, 1073745817, 1073745821, 1073745833, 1073745839, 1073745859, 1073745863, 
            1073745877, 1073745889, 1073745899, 1073745923, 1073745941, 1073745943, 1073745997, 1073746013, 1073746019, 1073746097, 1073746103, 1073746109, 1073746127, 1073746159, 1073746169, 
            1073746181, 1073746229, 1073746243, 1073746273, 1073746321, 1073746337, 1073746351, 1073746361, 1073746379, 1073746397, 1073746403, 1073746423, 1073746477, 1073746483, 1073746511, 
            1073746517, 1073746529, 1073746567, 1073746573, 1073746577, 1073746589, 1073746603, 1073746621, 1073746627, 1073746637, 1073746643, 1073746669, 1073746699, 1073746711, 1073746747, 
            1073746759, 1073746777, 1073746799, 1073746811, 1073746823, 1073746831, 1073746859, 1073746931, 1073746939, 1073746951, 1073746967, 1073747039, 1073747063, 1073747107, 1073747123, 
            1073747137, 1073747153, 1073747161, 1073747167, 1073747197, 1073747221, 1073747231, 1073747239, 1073747263, 1073747273, 1073747287, 1073747309, 1073747321, 1073747327, 1073747369, 
            1073747371, 1073747393, 1073747419, 1073747447, 1073747459, 1073747471, 1073747497, 1073747537, 1073747573, 1073747603, 1073747621, 1073747641, 1073747687, 1073747699, 1073747747, 
            1073747767, 1073747783, 1073747791, 1073747833, 1073747861, 1073747953, 1073747957, 1073747977, 1073747989, 1073748019, 1073748059, 1073748061, 1073748079, 1073748107, 1073748133, 
            1073748163, 1073748187, 1073748191, 1073748211, 1073748239, 1073748241, 1073748289, 1073748293, 1073748301, 1073748343, 1073748397, 1073748409, 1073748433, 1073748437, 1073748449, 
            1073748469, 1073748497, 1073748503, 1073748527, 1073748541, 1073748569, 1073748587, 1073748607, 1073748617, 1073748619, 1073748647, 1073748649, 1073748659, 1073748661, 1073748671, 
            1073748727, 1073748733, 1073748737, 1073748757, 1073748761, 1073748799, 1073748853, 1073748869, 1073748937, 1073748947, 1073748979, 1073748989, 1073749003, 1073749013, 1073749021, 
            1073749031, 1073749037, 1073749067, 1073749073, 1073749129, 1073749151, 1073749153, 1073749211, 1073749253, 1073749307, 1073749333, 1073749343, 1073749349, 1073749367, 1073749381, 
            1073749409, 1073749433, 1073749459, 1073749463, 1073749471, 1073749477, 1073749487, 1073749493, 1073749499, 1073749507, 1073749519, 1073749531, 1073749541, 1073749553, 1073749561, 
            1073749609, 1073749619, 1073749681, 1073749711, 1073749723, 1073749727, 1073749741, 1073749763, 1073749769, 1073749777, 1073749783, 1073749811, 1073749849, 1073749889, 1073749891, 
            1073749913, 1073749927, 1073749933, 1073749951, 1073749979, 1073749991, 1073749993};
    
    public PerlinNoise(int height, int width, double persist, int octaves) {
        this(height, width, 10, persist, octaves);
    }

    public PerlinNoise(int height, int width, int squaresPerSide, double persist, int octaves) {
        this.gridWidth = width;
        this.gridHeight = height;
        this.squaresPerSide = squaresPerSide;
        this.persistance = persist;
        this.octaves = octaves;
        
        Random rand = new Random(System.currentTimeMillis());
        this.prime1 = randPrime1[(int)(randPrime1.length*rand.nextDouble())];
        this.prime2 = randPrime2[(int)(randPrime2.length*rand.nextDouble())];
        this.prime3 = randPrime3[(int)(randPrime3.length*rand.nextDouble())];
        this.prime4 = randPrime4[(int)(randPrime4.length*rand.nextDouble())];
        this.prime5 = randPrime5[(int)(randPrime5.length*rand.nextDouble())];
        this.prime6 = randPrime6[(int)(randPrime6.length*rand.nextDouble())];
    }

    private double noise(int seedX, int seedY) {
        int n = seedX + seedY*this.prime1;
        n = (n << this.prime2)^n;
        return(1.0 - ((n*(n*n*this.prime3 + this.prime4) + this.prime5)&0x7fffffff)/(double)(this.prime6));
    }
    
    private double smoothNoise(int x, int y) {
        double corners = (this.noise(x - 1, y - 1)
                         +this.noise(x + 1, y - 1)
                         +this.noise(x - 1, y + 1)
                         +this.noise(x + 1, y + 1))/16.0;
        double sides   = (this.noise(x - 1, y)
                         +this.noise(x + 1, y)
                         +this.noise(x,     y - 1)
                         +this.noise(x,     y + 1))/8.0;
        double center  = (this.noise(x,     y))/4.0;
        
        return(corners + sides + center);
    }
    
    private double interpolate(double x, double y, double fraction) {
        double ft = fraction*Math.PI;
        double f = (1 - Math.cos(ft))*0.5;
        
        return(x*(1 - f) + y*f);
    }
    
    private double interpolatedNoise(double x, double y) {
        int integerX = (int)(x);
        double fractionX = x - integerX;
        int integerY = (int)(y);
        double fractionY = y - integerY;
        
        double v1 = smoothNoise(integerX,     integerY);
        double v2 = smoothNoise(integerX + 1, integerY);
        double v3 = smoothNoise(integerX,     integerY + 1);
        double v4 = smoothNoise(integerX + 1, integerY + 1);
        
        double i1 = interpolate(v1, v2, fractionX);
        double i2 = interpolate(v3, v4, fractionX);
        
        return(interpolate(i1, i2, fractionY));
    }
    
    public double eval(double x, double y) {
        double total = 0;
        for(int i = 0; i < this.octaves; i++) {
            double frequency = Math.pow(2, i);
            double amplitude = Math.pow(this.persistance, i);
            
            total += this.interpolatedNoise(x*frequency, y*frequency)*amplitude;
        }
        
        return(total);
    }
}
